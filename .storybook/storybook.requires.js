/* do not change this file, it is auto generated by storybook. */

import {
  configure,
  addDecorator,
  addParameters,
  addArgsEnhancer,
  clearDecorators,
} from "@storybook/react-native";

global.STORIES = [
  {
    titlePrefix: "",
    directory: "./src",
    files: "**/*.stories.?(tsx)",
    importPathMatcher:
      "^\\.[\\\\/](?:src(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)\\/|\\/|$)(?!\\.)(?=.)[^/]*?\\.stories\\.(?:tsx)?)$",
  },
];

import { decorators, parameters } from "./preview";

if (decorators) {
  if (__DEV__) {
    // stops the warning from showing on every HMR
    require("react-native").LogBox.ignoreLogs([
      "`clearDecorators` is deprecated and will be removed in Storybook 7.0",
    ]);
  }
  // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
  clearDecorators();
  decorators.forEach((decorator) => addDecorator(decorator));
}

if (parameters) {
  addParameters(parameters);
}

const getStories = () => {
  return {
    "./src/components/atoms/bottom-sheets/BottomSheetWithFlatList/BottomSheetWithFlatList.stories.tsx": require("../src/components/atoms/bottom-sheets/BottomSheetWithFlatList/BottomSheetWithFlatList.stories.tsx"),
    "./src/components/atoms/bottom-sheets/BottomSheetWithView/BottomSheetWithView.stories.tsx": require("../src/components/atoms/bottom-sheets/BottomSheetWithView/BottomSheetWithView.stories.tsx"),
    "./src/components/atoms/GradientDivider/GradientDivider.stories.tsx": require("../src/components/atoms/GradientDivider/GradientDivider.stories.tsx"),
    "./src/components/atoms/images/RemoteImage/RemoteImage.stories.tsx": require("../src/components/atoms/images/RemoteImage/RemoteImage.stories.tsx"),
    "./src/components/atoms/LogoWithWordmark/LogoWithWordmark.stories.tsx": require("../src/components/atoms/LogoWithWordmark/LogoWithWordmark.stories.tsx"),
    "./src/components/atoms/SampleComponent/SampleComponent.stories.tsx": require("../src/components/atoms/SampleComponent/SampleComponent.stories.tsx"),
    "./src/components/atoms/TagItem/TagItem.stories.tsx": require("../src/components/atoms/TagItem/TagItem.stories.tsx"),
    "./src/components/atoms/texts/Texts.stories.tsx": require("../src/components/atoms/texts/Texts.stories.tsx"),
    "./src/components/atoms/Touchable/Touchable.stories.tsx": require("../src/components/atoms/Touchable/Touchable.stories.tsx"),
    "./src/components/atoms/Wordmark/Wordmark.stories.tsx": require("../src/components/atoms/Wordmark/Wordmark.stories.tsx"),
    "./src/components/molecules/buttons/Buttons.stories.tsx": require("../src/components/molecules/buttons/Buttons.stories.tsx"),
    "./src/components/molecules/inputs/Inputs.stories.tsx": require("../src/components/molecules/inputs/Inputs.stories.tsx"),
    "./src/components/molecules/list-items/SelectionItem/SelectionItem.stories.tsx": require("../src/components/molecules/list-items/SelectionItem/SelectionItem.stories.tsx"),
    "./src/components/molecules/Offer/Offer.stories.tsx": require("../src/components/molecules/Offer/Offer.stories.tsx"),
    "./src/components/molecules/Restaurant/Restaurant.stories.tsx": require("../src/components/molecules/Restaurant/Restaurant.stories.tsx"),
    "./src/components/molecules/SectionHeader/SectionHeader.stories.tsx": require("../src/components/molecules/SectionHeader/SectionHeader.stories.tsx"),
    "./src/components/organisms/DropDownList/DropDownList.stories.tsx": require("../src/components/organisms/DropDownList/DropDownList.stories.tsx"),
    "./src/components/organisms/LandingOverlay/LandingOverlay.stories.tsx": require("../src/components/organisms/LandingOverlay/LandingOverlay.stories.tsx"),
    "./src/theme/Color.stories.tsx": require("../src/theme/Color.stories.tsx"),
    "./src/theme/tokens/Space.stories.tsx": require("../src/theme/tokens/Space.stories.tsx"),
  };
};

configure(getStories, module, false);
